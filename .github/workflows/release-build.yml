name: Release Build

on:
  push:
    branches:
      - master

jobs:
  check-actor:
    name: Check Actor
    runs-on: ubuntu-latest
    steps:
      - name: Check Authorized User
        run: |
          if [[ "${{ github.actor }}" != "F4bioo" ]]; then
            echo "Unauthorized user. Exiting."
            exit 1
          fi

  check_job_flag:
    needs: check-actor
    name: Check Job Flag
    runs-on: ubuntu-latest
    steps:
      - name: Should Create Release
        run: |
          echo "Current Job Flag value is: ${{ vars.SHOULD_CREATE_RELEASE }}"

  build:
    needs: check_job_flag
    if: ${{ vars.SHOULD_CREATE_RELEASE == 'true' }}
    name: App Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Read Config File
        id: version_details
        run: |
          echo "VERSION_CODE=$(grep 'const val versionCode' buildSrc/src/main/java/Config.kt | awk -F '=' '{print $2}' | tr -d ' ')" >> $GITHUB_ENV
          echo "VERSION_NAME=$(grep 'const val versionName' buildSrc/src/main/java/Config.kt | awk -F '=' '{print $2}' | tr -d ' \"')" >> $GITHUB_ENV

      - name: Create Release Tag Name
        run: |
          echo "RELEASE_TAG=${{ env.VERSION_NAME }}(b${{ env.VERSION_CODE }})" >> $GITHUB_ENV

      - name: Decode Keystore File
        run: |
          mkdir -p keystore
          echo "${{ secrets.STORE_FILE_BASE64 }}" | base64 --decode > keystore/seedcake_app_key_store.jks

      - name: Create Keystore Properties
        run: |
          echo "STORE_FILE=./keystore/seedcake_app_key_store.jks" >> keystore/keystore.properties
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> keystore/keystore.properties
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> keystore/keystore.properties
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> keystore/keystore.properties

      - name: Build APK
        run: |
          ./gradlew assembleRelease -PkeyAlias="${{ secrets.KEY_ALIAS }}" -PkeyPassword="${{ secrets.KEY_PASSWORD }}" -PstoreFile=./keystore/seedcake_app_key_store.jks -PstorePassword="${{ secrets.STORE_PASSWORD }}"

      - name: Build AAB
        run: |
          ./gradlew bundleRelease -PkeyAlias="${{ secrets.KEY_ALIAS }}" -PkeyPassword="${{ secrets.KEY_PASSWORD }}" -PstoreFile=./keystore/seedcake_app_key_store.jks -PstorePassword="${{ secrets.STORE_PASSWORD }}"

      - name: Import PGP Key
        run: echo "${{ secrets.PGP_PRIVATE_KEY }}" | gpg --batch --import

      - name: Sign APK with PGP
        run: |
          echo "${{ secrets.PGP_PASSPHRASE }}" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --armor --detach-sign app/build/outputs/apk/release/app-release.apk

      - name: Sign AAB with PGP
        run: |
          echo "${{ secrets.PGP_PASSPHRASE }}" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --armor --detach-sign app/build/outputs/bundle/release/app-release.aab

      - name: Rename APK and PGP Signature
        run: |
          mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/Seedcake-v${{ env.VERSION_NAME }}-release.apk
          mv app/build/outputs/apk/release/app-release.apk.asc app/build/outputs/apk/release/Seedcake-v${{ env.VERSION_NAME }}-release.apk.asc

      - name: Rename AAB and PGP Signature
        run: |
          mv app/build/outputs/bundle/release/app-release.aab app/build/outputs/bundle/release/Seedcake-v${{ env.VERSION_NAME }}-release.aab
          mv app/build/outputs/bundle/release/app-release.aab.asc app/build/outputs/bundle/release/Seedcake-v${{ env.VERSION_NAME }}-release.aab.asc

      - name: Execute SHA256SUM Script
        run: |
          chmod +x scripts/sha256-sum.sh
          PGP_PASSPHRASE="${{ secrets.PGP_PASSPHRASE }}" VERSION_NAME="${{ env.VERSION_NAME }}" scripts/sha256-sum.sh app/build/outputs/apk/release/Seedcake-v${{ env.VERSION_NAME }}-release.apk app/build/outputs/bundle/release/Seedcake-v${{ env.VERSION_NAME }}-release.aab
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          VERSION_NAME: ${{ env.VERSION_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.RELEASE_TAG }}
          release_name: v${{ env.RELEASE_TAG }}
          body_path: ./.github/markdown/build-release-message.md
          draft: false
          prerelease: false

      - name: Upload APK Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/Seedcake-v${{ env.VERSION_NAME }}-release.apk
          asset_name: Seedcake-v${{ env.VERSION_NAME }}-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/release/Seedcake-v${{ env.VERSION_NAME }}-release.aab
          asset_name: Seedcake-v${{ env.VERSION_NAME }}-release.aab
          asset_content_type: application/vnd.android.package-archive

      - name: Upload PGP Signature Release Asset for APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/Seedcake-v${{ env.VERSION_NAME }}-release.apk.asc
          asset_name: Seedcake-v${{ env.VERSION_NAME }}-release.apk.asc
          asset_content_type: application/pgp-signature

      - name: Upload PGP Signature Release Asset for AAB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/release/Seedcake-v${{ env.VERSION_NAME }}-release.aab.asc
          asset_name: Seedcake-v${{ env.VERSION_NAME }}-release.aab.asc
          asset_content_type: application/pgp-signature

      - name: Upload SHA256SUM Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/SHA256SUM-v${{ env.VERSION_NAME }}.asc
          asset_name: SHA256SUM-v${{ env.VERSION_NAME }}.asc
          asset_content_type: application/pgp-signature

      - name: Create Temp Debug Artifacts Folder
        run: mkdir -p temp_debug_artifacts

      - name: Create Versioned Mapping
        run: |
          mv app/build/outputs/mapping/release/mapping.txt 'temp_debug_artifacts/mapping-v${{ env.RELEASE_TAG }}.txt'

      - name: Create Zip Native Libraries
        run: |
          zip -r temp_debug_artifacts/libs-v${{ env.RELEASE_TAG }}.zip app/build/intermediates/merged_native_libs/release/out/lib/*

      - name: Upload Debug Artifacts to Google Play
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ secrets.FTP_SERVER_DIR }}
          local-dir: "temp_debug_artifacts/"
